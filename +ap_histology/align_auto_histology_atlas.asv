function align_auto_histology_atlas(~,~,histology_toolbar_gui)
% Part of AP_histology toolbox
%
% Auto aligns histology slices and matched CCF slices by outline registration

% Get images (from path in toolbar GUI)
histology_toolbar_guidata = guidata(histology_toolbar_gui);
save_path = histology_toolbar_guidata.save_path;

slice_dir = dir(fullfile(save_path,'*.tif'));
slice_fn = natsortfiles(cellfun(@(path,fn) fullfile(path,fn), ...
    {slice_dir.folder},{slice_dir.name},'uni',false));

slice_im = cell(length(slice_fn),1);
for curr_slice = 1:length(slice_fn)
   slice_im{curr_slice} = imread(slice_fn{curr_slice});  
end

% Load corresponding CCF slices
ccf_slice_fn = fullfile(save_path,'histology_ccf.mat');
load(ccf_slice_fn);

% Binarize slices
slice_im_flat = cellfun(@(x) max(x,[],3),slice_im,'uni',false);
slice_thresh = graythresh(cell2mat(cellfun(@(x) reshape(x(x~=0),[],1),slice_im_flat,'uni',false)));
slice_thresh_adjust = slice_thresh + (1-slice_thresh)*0.8;
slice_im_binary = cellfun(@(x) imbinarize(x,slice_thresh_adjust),slice_im_flat,'uni',false);
% (flip sign if brightfield)
brightfield_flag = mode(round(cell2mat(cellfun(@(x) ...
    reshape(x,[],1),slice_im_flat,'uni',false)))) > 100;
if brightfield_flag
    slice_im_binary = cellfun(@not,slice_im_binary,'uni',false);
end

% Align outlines of histology/atlas slices
fig_last_aligned = figure;
ax_last_aligned = axes;

atlas_align_borders = cell(size(slice_im));
atlas2histology_tform = cell(size(slice_im));
for curr_slice = 1:length(slice_im)
    
    % Get histology slice outline
    curr_histology_thresh = +slice_im_binary{curr_slice};

    % Get atlas slice outline
    curr_av = histology_ccf(curr_slice).av_slices;
    curr_av(isnan(curr_av)) = 1;
    curr_av_thresh = +(curr_av > 1);

    % Resize atlas outline to approximately match histology, affine-align
    resize_factor = min(size(curr_histology_thresh)./size(curr_av_thresh));
    curr_av_thresh_resize = imresize(curr_av_thresh,resize_factor,'nearest');
    
    [optimizer, metric] = imregconfig('monomodal');
    optimizer.MaximumIterations = 200;
    optimizer.MaximumStepLength = 1e-2;
    optimizer.GradientMagnitudeTolerance = 1e-5;
    optimizer.RelaxationFactor = 1e-1;

    % Do alignment on downsampled sillhouettes (faster and more accurate)
    downsample_factor = 10;

    tformEstimate_affine_resized = ...
        imregtform( ...
        imresize(curr_av_thresh_resize,1/downsample_factor,'nearest'), ...
        imresize(curr_histology_thresh,1/downsample_factor,'nearest'), ...
        'affine',optimizer,metric,'PyramidLevels',3);

    % Set final transform (scale to histology, downscale, affine, upscale)
    scale_match = eye(3).*[repmat(resize_factor,2,1);1];
    scale_align_down = eye(3).*[repmat(1/downsample_factor,2,1);1];
    scale_align_up = eye(3).*[repmat(downsample_factor,2,1);1];

    tformEstimate_affine = tformEstimate_affine_resized;
    tformEstimate_affine.T = scale_match*scale_align_down* ...
        tformEstimate_affine_resized.T*scale_align_up;
    
    % Store the affine matrix and plot the transform
    atlas2histology_tform{curr_slice} = tformEstimate_affine.T;
    
    curr_av_aligned = imwarp(curr_av,tformEstimate_affine,'nearest', ...
        'Outputview',imref2d(size(curr_histology_thresh)));   
    
    curr_histology_thresh_boundaries = imdilate(curr_histology_thresh,ones(9))-curr_histology_thresh;
    av_aligned_boundaries = round(conv2(curr_av_aligned,ones(3)./9,'same')) ~= curr_av_aligned;

    % (recreate figure if closed)
    if ~isvalid(fig_last_aligned)
        fig_last_aligned = figure;
    end
    if ~isvalid(ax_last_aligned)
        ax_last_aligned = axes(fig_last_aligned);
    end
    figure(fig_last_aligned);
    imshow(curr_histology_thresh,'Parent',ax_last_aligned); hold on
    imagesc(padarray(av_aligned_boundaries,[0,0,2],0,'post'), ...
        'Parent',ax_last_aligned,'AlphaData',av_aligned_boundaries*1);
    colormap(gray);
    title(['Aligning slices ' num2str(curr_slice) '/' num2str(length(slice_im)) '...']);
    hold off;
    drawnow;

    atlas_align_borders{curr_slice} = av_aligned_boundaries;
    
end

if isvalid(fig_last_aligned)
    close(fig_last_aligned);
end


curr_histology_thresh_boundaries = imdilate(curr_histology_thresh,ones(9))-curr_histology_thresh;

imagesc(padarray(curr_histology_thresh_boundaries,[0,0,2],0,'post'), ...
    'Parent',ax_last_aligned,'AlphaData',curr_histology_thresh_boundaries*1);

% Montage overlay
figure;
% (images)
montage(slice_im); hold on;
% (binary threshold outline)
slice_im_binary_boundaries = cellfun(@(x) ...
    imdilate(x,ones(9))-x,slice_im_binary,'uni',false);
binary_boundaries_montage = montage(slice_im_binary_boundaries);
binary_boundaries_montage.AlphaData = binary_boundaries_montage.CData;
binary_boundaries_montage.CData = padarray(binary_boundaries_montage.CData,[0,0,2],0,'post');
% (aligned atlas areas)
aligned_atlas_montage = montage(atlas_align_borders);
aligned_atlas_montage.AlphaData = binary_boundaries_montage.CData;
aligned_atlas_montage.CData = padarray(aligned_atlas_montage.CData,[0,0,1],0,'both');



save_fn = fullfile(save_path,'atlas2histology_tform.mat');
save(save_fn,'atlas2histology_tform');

disp(['Finished auto-alignment, saved in ' save_fn]);














